import React, { useState } from 'react';
import {
  CreditCard,
  Check,
  Star,
  Gift,
  Truck,
  Calendar,
  BookOpen,
  Download,
  Bell,
  Shield,
  Users,
  Award
} from 'lucide-react';
import Sidebar from '@/components/Sidebar';
import HomeLayout from '@/layouts/home-layout';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';

const MembershipPage: React.FC = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    address: '',
    city: '',
    postalCode: '',
    paymentMethod: 'bkash'
  });

  const benefits = [
    {
      icon: BookOpen,
      title: 'ржорж╛рж╕рж┐ржХ ржкрждрзНрж░рж┐ржХрж╛',
      description: 'ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо ржХржирзНржЯрзЗржирзНржЯ рж╕рж╣ ржорж╛рж╕рж┐ржХ ржкрждрзНрж░рж┐ржХрж╛ ржШрж░рзЗ ржмрж╕рзЗ ржкрж╛ржи'
    },
    {
      icon: Download,
      title: 'ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕',
      description: 'рж╕ржХрж▓ ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржХржирзНржЯрзЗржирзНржЯ ржУ ржмржЗ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рзБржи'
    },
    {
      icon: Bell,
      title: 'ржкрзНрж░рж╛ржержорж┐ржХ рж╕ржВржмрж╛ржж',
      description: 'ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг рж╕ржВржмрж╛ржж рж╕ржмрж╛рж░ ржЖржЧрзЗ ржкрж╛ржи'
    },
    {
      icon: Gift,
      title: 'ржмрж┐рж╢рзЗрж╖ ржЫрж╛ржбрж╝',
      description: 'ржЗржнрзЗржирзНржЯ ржУ ржмржЗржпрж╝рзЗ ржмрж┐рж╢рзЗрж╖ ржЫрж╛ржбрж╝ ржкрж╛ржи'
    },
    {
      icon: Users,
      title: 'ржПржХрзНрж╕ржХрзНрж▓рзБрж╕рж┐ржн ржХржорж┐ржЙржирж┐ржЯрж┐',
      description: 'рж╕ржжрж╕рзНржпржжрзЗрж░ ржмрж┐рж╢рзЗрж╖ ржЧрзНрж░рзБржкрзЗ ржпрзЛржЧ ржжрж┐ржи'
    },
    {
      icon: Award,
      title: 'ржмрж┐рж╢рзЗрж╖ ржЙрзОрж╕ржм',
      description: 'рж╕ржжрж╕рзНржпржжрзЗрж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ ржЗржнрзЗржирзНржЯрзЗ ржЕржВрж╢ржЧрзНрж░рж╣ржг'
    }
  ];

  const paymentMethods = [
    { id: 'bkash', name: 'ржмрж┐ржХрж╛рж╢', logo: 'ЁЯТ│' },
    { id: 'nagad', name: 'ржиржЧржж', logo: 'ЁЯТ░' },
    { id: 'rocket', name: 'рж░ржХрзЗржЯ', logo: 'ЁЯЪА' },
    { id: 'bank', name: 'ржмрзНржпрж╛ржВржХ ржЯрзНрж░рж╛ржирзНрж╕ржлрж╛рж░', logo: 'ЁЯПж' }
  ];

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    console.log('Membership form submitted:', formData);
    // Redirect to payment or confirmation page
    window.location.href = '/thank-you';
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  return (
    <HomeLayout>
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 border-b-4 border-red-600 pb-4 mb-6">
            рж╕ржжрж╕рзНржпржкржж
          </h1>
          <p className="text-gray-600 text-lg">
            рж╣рж░рзЗржХрзГрж╖рзНржг рж╕ржорж╛ржЪрж╛рж░ ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо рж╕ржжрж╕рзНржп рж╣ржпрж╝рзЗ ржмрж┐рж╢рзЗрж╖ рж╕рзБржмрж┐ржзрж╛ ржУ ржХржирзНржЯрзЗржирзНржЯ ржЙржкржнрзЛржЧ ржХрж░рзБржи
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-4 gap-8">
          <div className="lg:col-span-3">
            {/* Membership Plan */}
            <div className="bg-gradient-to-r from-red-600 to-red-700 rounded-lg p-8 mb-8 text-white">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8 items-center">
                <div>
                  <div className="flex items-center space-x-2 mb-4">
                    <Star className="w-6 h-6 fill-current" />
                    <span className="text-red-100">ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо рж╕ржжрж╕рзНржпржкржж</span>
                  </div>
                  <h2 className="text-3xl font-bold mb-4">ржмрж╛рж░рзНрж╖рж┐ржХ рж╕рж╛ржмрж╕рзНржХрзНрж░рж┐ржкрж╢ржи</h2>
                  <div className="flex items-baseline space-x-2 mb-6">
                    <span className="text-4xl font-bold">рзирзлрзж</span>
                    <span className="text-xl">ржЯрж╛ржХрж╛</span>
                    <span className="text-red-100">/ржмржЫрж░</span>
                  </div>
                  <p className="text-red-100 mb-6">
                    ржорж╛рждрзНрж░ рзирзлрзж ржЯрж╛ржХрж╛ржпрж╝ ржкрзБрж░рзЛ ржмржЫрж░рзЗрж░ ржЬржирзНржп ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо рж╕ржжрж╕рзНржпржкржж ржирж┐ржи ржПржмржВ ржмрж┐рж╢рзЗрж╖ рж╕рзБржмрж┐ржзрж╛ ржЙржкржнрзЛржЧ ржХрж░рзБржиред
                  </p>
                  <div className="flex items-center space-x-4">
                    <Truck className="w-5 h-5" />
                    <span>ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ ржпрзЗржХрзЛржирзЛ ржЬрж╛ржпрж╝ржЧрж╛ржпрж╝ ржлрзНрж░рж┐ ржбрзЗрж▓рж┐ржнрж╛рж░рж┐</span>
                  </div>
                </div>
                <div className="text-center">
                  <div className="bg-white/20 rounded-lg p-6">
                    <BookOpen className="w-16 h-16 text-white mx-auto mb-4" />
                    <h3 className="text-xl font-semibold mb-2">ржорж╛рж╕рж┐ржХ ржкрждрзНрж░рж┐ржХрж╛</h3>
                    <p className="text-red-100">ржкрзНрж░рж┐ржирзНржЯ ржХржкрж┐ ржШрж░рзЗ ржкрзМржБржЫрзЗ ржпрж╛ржмрзЗ</p>
                  </div>
                </div>
              </div>
            </div>

            {/* Benefits */}
            <div className="bg-white rounded-lg shadow-sm p-6 mb-8">
              <h2 className="text-2xl font-bold text-gray-900 mb-6">рж╕ржжрж╕рзНржпржкржжрзЗрж░ рж╕рзБржмрж┐ржзрж╛</h2>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {benefits.map((benefit, index) => (
                  <div key={index} className="flex items-start space-x-4 p-4 bg-gray-50 rounded-lg">
                    <div className="bg-red-100 p-3 rounded-lg">
                      <benefit.icon className="w-6 h-6 text-red-500" />
                    </div>
                    <div>
                      <h3 className="font-semibold text-gray-900 mb-2">{benefit.title}</h3>
                      <p className="text-gray-600 text-sm">{benefit.description}</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Membership Form */}
            <div className="bg-white rounded-lg shadow-sm p-6">
              <h2 className="text-2xl font-bold text-gray-900 mb-6 flex items-center">
                <CreditCard className="w-6 h-6 mr-2 text-red-500" />
                рж╕ржжрж╕рзНржпржкржж ржлрж░рзНржо
              </h2>

              <form onSubmit={handleSubmit} className="space-y-6">
                {/* Personal Information */}
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">ржмрзНржпржХрзНрждрж┐ржЧржд рждржерзНржп</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <label htmlFor="name" className="block text-sm font-medium text-gray-700 mb-2">
                        ржкрзВрж░рзНржг ржирж╛ржо <span className='text-red-600'>*</span>
                      </label>
                      <Input
                        type="text"
                        id="name"
                        name="name"
                        required
                        value={formData.name}
                        onChange={handleInputChange}
                        className='px-4 py-3 h-12 focus:!outline-0 focus:!ring-2 focus:!ring-red-500'
                        placeholder="ржЖржкржирж╛рж░ ржкрзВрж░рзНржг ржирж╛ржо"
                      />
                    </div>

                    <div>
                      <label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-2">
                        ржЗржорзЗржЗрж▓ ржарж┐ржХрж╛ржирж╛ <span className='text-red-600'>*</span>
                      </label>
                      <Input
                        type="email"
                        id="email"
                        name="email"
                        required
                        value={formData.email}
                        onChange={handleInputChange}
                        className='px-4 py-3 h-12 focus:!outline-0 focus:!ring-2 focus:!ring-red-500'
                        placeholder="ржЖржкржирж╛рж░ ржЗржорзЗржЗрж▓"
                      />

                    </div>
                  </div>

                  <div className="mt-4">
                    <label htmlFor="phone" className="block text-sm font-medium text-gray-700 mb-2">
                      ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░ <span className='text-red-600'>*</span>
                    </label>
                    <Input
                      type="tel"
                      id="phone"
                      name="phone"
                      required
                      value={formData.phone}
                      onChange={handleInputChange}
                      className='px-4 py-3 h-12 focus:!outline-0 focus:!ring-2 focus:!ring-red-500'
                      placeholder="ржЖржкржирж╛рж░ ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░"
                    />
                  </div>
                </div>

                {/* Delivery Address */}
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржарж┐ржХрж╛ржирж╛</h3>
                  <div className="space-y-4">
                    <div>
                      <label htmlFor="address" className="block text-sm font-medium text-gray-700 mb-2">
                        рж╕ржорзНржкрзВрж░рзНржг ржарж┐ржХрж╛ржирж╛ <span className='text-red-600'>*</span>
                      </label>
                      <textarea
                        id="address"
                        name="address"
                        required
                        rows={3}
                        value={formData.address}
                        onChange={handleInputChange}                        
                        className='w-full px-4 py-3 border border-gray-300 rounded-lg focus:!outline-0 focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive focus:!ring-2 focus:!ring-red-500'
                        placeholder="ржмрж╛ржбрж╝рж┐/ржлрзНрж▓рзНржпрж╛ржЯ ржиржорзНржмрж░, рж░рж╛рж╕рзНрждрж╛, ржПрж▓рж╛ржХрж╛"
                      ></textarea>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <label htmlFor="city" className="block text-sm font-medium text-gray-700 mb-2">
                          рж╢рж╣рж░ <span className='text-red-600'>*</span>
                        </label>
                        <Input
                          type="text"
                          id="city"
                          name="city"
                          required
                          value={formData.city}
                          onChange={handleInputChange}
                          className='px-4 py-3 h-12 focus:!outline-0 focus:!ring-2 focus:!ring-red-500'
                          placeholder="ржЖржкржирж╛рж░ рж╢рж╣рж░"
                        />
                      </div>

                      <div>
                        <label htmlFor="postalCode" className="block text-sm font-medium text-gray-700 mb-2">
                          ржкрзЛрж╕рзНржЯрж╛рж▓ ржХрзЛржб
                        </label>
                        <Input
                          type="text"
                          id="postalCode"
                          name="postalCode"
                          value={formData.postalCode}
                          onChange={handleInputChange}
                          className='px-4 py-3 h-12 focus:!outline-0 focus:!ring-2 focus:!ring-red-500'
                          placeholder="ржкрзЛрж╕рзНржЯрж╛рж▓ ржХрзЛржб"
                        />
                      </div>
                    </div>
                  </div>
                </div>

                {/* Payment Method */}
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">ржкрзЗржорзЗржирзНржЯ ржкржжрзНржзрждрж┐</h3>
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                    {paymentMethods.map((method) => (
                      <label
                        key={method.id}
                        className={`flex items-center justify-center p-4 border-2 rounded-lg cursor-pointer transition-colors ${formData.paymentMethod === method.id
                          ? 'border-red-500 bg-red-50'
                          : 'border-gray-200 hover:border-gray-300'
                          }`}
                      >
                        <input
                          type="radio"
                          name="paymentMethod"
                          value={method.id}
                          checked={formData.paymentMethod === method.id}
                          onChange={handleInputChange}
                          className="sr-only"
                        />
                        <div className="text-center">
                          <div className="text-2xl mb-2">{method.logo}</div>
                          <div className="text-sm font-medium">{method.name}</div>
                        </div>
                      </label>
                    ))}
                  </div>
                </div>

                {/* Summary */}
                <div className="bg-gray-50 rounded-lg p-6">
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">ржЕрж░рзНржбрж╛рж░ рж╕рж╛рж░рж╛ржВрж╢</h3>
                  <div className="space-y-2">
                    <div className="flex justify-between">
                      <span>ржмрж╛рж░рзНрж╖рж┐ржХ рж╕ржжрж╕рзНржпржкржж</span>
                      <span>рзирзлрзж ржЯрж╛ржХрж╛</span>
                    </div>
                    <div className="flex justify-between">
                      <span>ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржЪрж╛рж░рзНржЬ</span>
                      <span className="text-green-600">ржлрзНрж░рж┐</span>
                    </div>
                    <div className="border-t pt-2 flex justify-between font-semibold">
                      <span>ржорзЛржЯ</span>
                      <span>рзирзлрзж ржЯрж╛ржХрж╛</span>
                    </div>
                  </div>
                </div>

                {/* Terms */}
                <div className="flex items-center space-x-3">
                  <input
                    type="checkbox"
                    id="terms"
                    required
                    className="h-4 w-4 text-red-500 focus:ring-red-500 border-gray-300 rounded"
                  />
                  <label htmlFor="terms" className="text-sm text-gray-600">
                    ржЖржорж┐ <a href="/usage-policy" className="text-red-500 hover:text-red-600">ржмрзНржпржмрж╣рж╛рж░рзЗрж░ рж╢рж░рзНрждрж╛ржмрж▓рзА</a> ржПржмржВ <a href="/privacy-policy" className="text-red-500 hover:text-red-700">ржЧрзЛржкржирзАржпрж╝рждрж╛ ржирзАрждрж┐</a> рж╕ржорзНржорждред
                  </label>
                </div>

                {/* Submit Button */}
                <div className="flex justify-end">
                  <button
                    type="submit"
                    className="flex items-center space-x-2 bg-red-500 text-white px-8 py-3 rounded-lg hover:bg-red-600 transition-colors cursor-pointer"
                  >
                    <CreditCard className="w-4 h-4" />
                    <span>ржкрзЗржорзЗржирзНржЯ ржХрж░рзБржи</span>
                  </button>
                </div>
              </form>
            </div>
          </div>

          <div className="lg:col-span-1">
            <Sidebar />
          </div>
        </div>
      </main>
    </HomeLayout>
  );
};

export default MembershipPage;